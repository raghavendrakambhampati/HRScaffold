/*Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.hrdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.OutputStream;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.export.ExportOptions;
import com.wavemaker.runtime.data.model.QueryProcedureInput;

import com.hrdb.models.query.*;

@Service
public class HrdbQueryExecutorServiceImpl implements HrdbQueryExecutorService {

    private static final Logger LOGGER = LoggerFactory.getLogger(HrdbQueryExecutorServiceImpl.class);

    @Autowired
    @Qualifier("hrdbWMQueryExecutor")
    private WMQueryExecutor queryExecutor;

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<CheckingResponse> executeChecking(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("checking", params, CheckingResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportChecking(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<CheckingResponse> queryInput = new QueryProcedureInput<>("checking", params, CheckingResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmploteeListResponse> executeEmploteeList(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("EmploteeList", params, EmploteeListResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmploteeList(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<EmploteeListResponse> queryInput = new QueryProcedureInput<>("EmploteeList", params, EmploteeListResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmployeeSelectVarResponse> executeEmployeeSelectVar(Integer selectedEmployee, Pageable pageable) {
        Map<String, Object> params = new HashMap<>(1);

        params.put("SelectedEmployee", selectedEmployee);

        return queryExecutor.executeNamedQuery("EmployeeSelectVar", params, EmployeeSelectVarResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmployeeSelectVar(Integer selectedEmployee, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(1);

        params.put("SelectedEmployee", selectedEmployee);

        QueryProcedureInput<EmployeeSelectVarResponse> queryInput = new QueryProcedureInput<>("EmployeeSelectVar", params, EmployeeSelectVarResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<SearchEmployeesResponse> executeSearchEmployees(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("SearchEmployees", params, SearchEmployeesResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportSearchEmployees(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<SearchEmployeesResponse> queryInput = new QueryProcedureInput<>("SearchEmployees", params, SearchEmployeesResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<SelectEmployeeResponse> executeSelectEmployee(Integer searchId, Integer liveListId, Pageable pageable) {
        Map<String, Object> params = new HashMap<>(2);

        params.put("SearchID", searchId);
        params.put("LiveListID", liveListId);

        return queryExecutor.executeNamedQuery("SelectEmployee", params, SelectEmployeeResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportSelectEmployee(Integer searchId, Integer liveListId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(2);

        params.put("SearchID", searchId);
        params.put("LiveListID", liveListId);

        QueryProcedureInput<SelectEmployeeResponse> queryInput = new QueryProcedureInput<>("SelectEmployee", params, SelectEmployeeResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmployeeListOfDeptId2Response> executeEmployeeListOf_DeptId2(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("EmployeeListOf_DeptId2", params, EmployeeListOfDeptId2Response.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmployeeListOf_DeptId2(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<EmployeeListOfDeptId2Response> queryInput = new QueryProcedureInput<>("EmployeeListOf_DeptId2", params, EmployeeListOfDeptId2Response.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmployeeListOfDeptid3Response> executeEmployeeListOf_Deptid3(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("EmployeeListOf_Deptid3", params, EmployeeListOfDeptid3Response.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmployeeListOf_Deptid3(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<EmployeeListOfDeptid3Response> queryInput = new QueryProcedureInput<>("EmployeeListOf_Deptid3", params, EmployeeListOfDeptid3Response.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmployeeListOfDeptId1Response> executeEmployeeListOf_DeptId1(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("EmployeeListOf_DeptId1", params, EmployeeListOfDeptId1Response.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmployeeListOf_DeptId1(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<EmployeeListOfDeptId1Response> queryInput = new QueryProcedureInput<>("EmployeeListOf_DeptId1", params, EmployeeListOfDeptId1Response.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<DepartmentCountResponse> executeDepartmentCount(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("DepartmentCount", params, DepartmentCountResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportDepartmentCount(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<DepartmentCountResponse> queryInput = new QueryProcedureInput<>("DepartmentCount", params, DepartmentCountResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<SrvVarEmployeeCountResponse> executeSrv_Var_EmployeeCount(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("Srv_Var_EmployeeCount", params, SrvVarEmployeeCountResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportSrv_Var_EmployeeCount(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<SrvVarEmployeeCountResponse> queryInput = new QueryProcedureInput<>("Srv_Var_EmployeeCount", params, SrvVarEmployeeCountResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<ColleagueDetailsResponse> execute_ColleagueDetails(Integer selectedemployeedeptid, Integer selectedemployeeid, Pageable pageable) {
        Map<String, Object> params = new HashMap<>(2);

        params.put("selectedemployeedeptid", selectedemployeedeptid);
        params.put("selectedemployeeid", selectedemployeeid);

        return queryExecutor.executeNamedQuery("_ColleagueDetails", params, ColleagueDetailsResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void export_ColleagueDetails(Integer selectedemployeedeptid, Integer selectedemployeeid, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(2);

        params.put("selectedemployeedeptid", selectedemployeedeptid);
        params.put("selectedemployeeid", selectedemployeeid);

        QueryProcedureInput<ColleagueDetailsResponse> queryInput = new QueryProcedureInput<>("_ColleagueDetails", params, ColleagueDetailsResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<SelectEmployeeVarResponse> executeSelectEmployeeVar(Integer searchId, Integer liveListId, Pageable pageable) {
        Map<String, Object> params = new HashMap<>(2);

        params.put("SearchID", searchId);
        params.put("LiveListID", liveListId);

        return queryExecutor.executeNamedQuery("SelectEmployeeVar", params, SelectEmployeeVarResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportSelectEmployeeVar(Integer searchId, Integer liveListId, ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(2);

        params.put("SearchID", searchId);
        params.put("LiveListID", liveListId);

        QueryProcedureInput<SelectEmployeeVarResponse> queryInput = new QueryProcedureInput<>("SelectEmployeeVar", params, SelectEmployeeVarResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmployeeListOfDeptId4Response> executeEmployeeListOf_DeptId4(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("EmployeeListOf_DeptId4", params, EmployeeListOfDeptId4Response.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmployeeListOf_DeptId4(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<EmployeeListOfDeptId4Response> queryInput = new QueryProcedureInput<>("EmployeeListOf_DeptId4", params, EmployeeListOfDeptId4Response.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<NoOfDepartmentResponse> executeNoOfDepartment(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("NoOfDepartment", params, NoOfDepartmentResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportNoOfDepartment(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<NoOfDepartmentResponse> queryInput = new QueryProcedureInput<>("NoOfDepartment", params, NoOfDepartmentResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<TotalBudgetResponse> executeTotalBudget(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("TotalBudget", params, TotalBudgetResponse.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportTotalBudget(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<TotalBudgetResponse> queryInput = new QueryProcedureInput<>("TotalBudget", params, TotalBudgetResponse.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

    @Transactional(value = "hrdbTransactionManager", readOnly = true)
    @Override
    public Page<EmployeeListOfDeptId5Response> executeEmployeeListOf_DeptId5(Pageable pageable) {
        Map<String, Object> params = new HashMap<>(0);


        return queryExecutor.executeNamedQuery("EmployeeListOf_DeptId5", params, EmployeeListOfDeptId5Response.class, pageable);
    }

    @Transactional(value = "hrdbTransactionManager", timeout = 300, readOnly = true)
    @Override
    public void exportEmployeeListOf_DeptId5(ExportOptions exportOptions, Pageable pageable, OutputStream outputStream) {
        Map<String, Object> params = new HashMap<>(0);


        QueryProcedureInput<EmployeeListOfDeptId5Response> queryInput = new QueryProcedureInput<>("EmployeeListOf_DeptId5", params, EmployeeListOfDeptId5Response.class);

        queryExecutor.exportNamedQueryData(queryInput, exportOptions, pageable, outputStream);
    }

}